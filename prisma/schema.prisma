generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  username  String   @unique(map: "User_username_key") @db.VarChar(50)
  password  String   @db.VarChar(255)
  email     String?  @db.VarChar(100)
  createdAt DateTime @default(now())
}


model booking {
  id            Int            @id @default(autoincrement())
  tourId        Int
  name          String         @db.VarChar(100)
  email         String         @db.VarChar(100)
  phone         String         @db.VarChar(20)
  departureDate DateTime
  totalPeople   Int
  hasChildren   Boolean        @default(false)
  childrenCount Int            @default(0)
  status        booking_status @default(pending)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime
  tour          tour           @relation(fields: [tourId], references: [id], onDelete: Cascade, map: "Booking_tourId_fkey")

  @@index([tourId], map: "Booking_tourId_fkey")
}

model journal {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(150)
  slug      String   @unique(map: "Journal_slug_key") @db.VarChar(150)
  content   String
  imageUrl  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model tour {
  id           Int       @id @default(autoincrement())
  title        String    @db.VarChar(150)
  slug         String    @unique(map: "Tour_slug_key") @db.VarChar(150)
  description  String
  requirements String?
  imageUrl     String?   @db.VarChar(255)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
  booking      booking[]
}

enum booking_status {
  pending
  confirmed
  cancelled
}
